AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for Tailscale exit node in an Autoscaling Group with IMDSv2 enabled, custom hostname, and optional open inbound security group'

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Select a VPC for the Tailscale exit node

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of Subnet IDs for the Auto Scaling Group (Public Subnets should be preferred)

  TailscaleAuthKey:
    Type: String
    NoEcho: true
    Description: Tailscale authentication key

  AmiId:
    Type: AWS::EC2::Image::Id
    Description: AMI ID for the EC2 instances

  InstanceType:
    Type: String
    Default: t3.micro
    Description: EC2 instance type

  MinSize:
    Type: Number
    Default: 1
    Description: Minimum size of the Auto Scaling Group

  MaxSize:
    Type: Number
    Default: 1
    Description: Maximum size of the Auto Scaling Group

  DesiredCapacity:
    Type: Number
    Default: 1
    Description: Desired capacity of the Auto Scaling Group

  AdvertiseTags:
    Type: CommaDelimitedList
    Default: ''
    Description: ACL tags to request (comma-separated list, each must start with 'tag:')

  EnableSSH:
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']
    Description: Enable SSH access via Tailscale

  Track:
    Type: String
    Default: 'stable'
    AllowedValues: ['stable', 'unstable']
    Description: Version of the Tailscale client to install

  MaxRetries:
    Type: Number
    Default: 3
    Description: Maximum number of retries to connect to the control server

  RetryDelay:
    Type: Number
    Default: 5
    Description: Delay in seconds between retries to connect to the control server

  Hostname:
    Type: String
    Default: ''
    Description: Hostname for the Tailscale node (leave empty to use default)

  OpenInboundSecurityGroup:
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
    Description: Open UDP port 41641 on the security group

Conditions:
  VpcSelected: !Not [!Equals [!Ref VpcId, '']]
  UseCustomHostname: !Not [!Equals [!Ref Hostname, '']]
  OpenInboundPort: !Equals [!Ref OpenInboundSecurityGroup, 'true']

Resources:
  SubnetSelector:
    Type: AWS::EC2::SecurityGroup
    Condition: VpcSelected
    Properties:
      GroupName: !Sub '${AWS::StackName}-subnet-selector'
      GroupDescription: Dummy security group to force subnet selection
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 127.0.0.1/32

  TailscaleExitNodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${AWS::StackName}-sg'
      GroupDescription: Security group for Tailscale exit node
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - !If
          - OpenInboundPort
          - IpProtocol: udp
            FromPort: 41641
            ToPort: 41641
            CidrIp: 0.0.0.0/0
          - !Ref AWS::NoValue
      SecurityGroupEgress:
        - IpProtocol: '-1'
          FromPort: 0
          ToPort: 0
          CidrIp: 0.0.0.0/0

  TailscaleExitNodeLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub 'lt-${AWS::StackName}'
      LaunchTemplateData:
        ImageId: !Ref AmiId
        InstanceType: !Ref InstanceType
        SecurityGroupIds: 
          - !Ref TailscaleExitNodeSecurityGroup
        MetadataOptions:
          HttpTokens: required
          HttpPutResponseHopLimit: 1
          HttpEndpoint: enabled
        UserData: 
          Fn::Base64: !Sub 
            - |
              #!/bin/bash
              # Enable IP forwarding
              echo 'net.ipv4.ip_forward = 1' | sudo tee -a /etc/sysctl.conf
              sudo sysctl -p /etc/sysctl.conf

              # Install Tailscale
              curl -fsSL https://tailscale.com/install.sh | sh

              # Set up Tailscale
              max_retries="${MaxRetries}"
              retry_delay="${RetryDelay}"
              i=1
              while [ $i -le $max_retries ]
              do
                sudo systemctl enable --now tailscaled
                
                tailscale_cmd="tailscale up \
                  --authkey ${TailscaleAuthKey} \
                  --advertise-exit-node \
                  --ssh=${EnableSSH}"
                
                if [ -n "${AdvertiseTagsJoined}" ]; then
                  tailscale_cmd="$tailscale_cmd --advertise-tags=${AdvertiseTagsJoined}"
                fi

                if [ -n "${Hostname}" ]; then
                  tailscale_cmd="$tailscale_cmd --hostname=${Hostname}"
                fi
                
                # Execute the tailscale up command
                eval "$tailscale_cmd"
                
                # Check the exit status of the previous command
                if [ $? -eq 0 ]; then
                  echo "Tailscale installation and configuration succeeded"
                  exit 0
                else
                  echo "Tailscale installation and configuration failed. Retry attempt $i"
                  sleep $retry_delay
                fi
                
                i=$((i + 1))
              done
            - AdvertiseTagsJoined: !Join [",", !Ref AdvertiseTags]
              Hostname: !If [UseCustomHostname, !Ref Hostname, '']

  TailscaleExitNodeASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Ref AWS::StackName
      MinSize: !Ref MinSize
      MaxSize: !Ref MaxSize
      DesiredCapacity: !Ref DesiredCapacity
      VPCZoneIdentifier: !If 
        - VpcSelected
        - !Ref SubnetIds
        - !Ref AWS::NoValue
      LaunchTemplate: 
        LaunchTemplateId: !Ref TailscaleExitNodeLaunchTemplate
        Version: !GetAtt TailscaleExitNodeLaunchTemplate.LatestVersionNumber
      HealthCheckType: EC2
      HealthCheckGracePeriod: 300
      Tags: 
        - Key: Name
          Value: !Sub '${AWS::StackName}-instance'
          PropagateAtLaunch: true

  TailscaleExitNodeInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/ec2/"
      Roles: 
        - !Ref TailscaleExitNodeRole

  TailscaleExitNodeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: "/ec2/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/CloudWatchAgentAdminPolicy
        - arn:aws:iam::aws:policy/AutoScalingFullAccess

Outputs:
  AutoScalingGroupName:
    Description: Name of the Auto Scaling Group
    Value: !Ref TailscaleExitNodeASG

  SecurityGroupId:
    Description: ID of the Security Group
    Value: !Ref TailscaleExitNodeSecurityGroup

  SelectedVpcId:
    Description: Selected VPC ID
    Value: !Ref VpcId